{"ast":null,"code":"import _toConsumableArray from \"/Users/colbygilbert95/Documents/tapTapAdventure/AvatarBazaar/MarketPlace/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/colbygilbert95/Documents/tapTapAdventure/AvatarBazaar/MarketPlace/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/colbygilbert95/Documents/tapTapAdventure/AvatarBazaar/MarketPlace/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/colbygilbert95/Documents/tapTapAdventure/AvatarBazaar/MarketPlace/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/colbygilbert95/Documents/tapTapAdventure/AvatarBazaar/MarketPlace/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/colbygilbert95/Documents/tapTapAdventure/AvatarBazaar/MarketPlace/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/colbygilbert95/Documents/tapTapAdventure/AvatarBazaar/MarketPlace/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/colbygilbert95/Documents/tapTapAdventure/AvatarBazaar/MarketPlace/src/components/Profile.js\";\nimport { Grid, Row, Col, Thumbnail, Button } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport CharacterStill from '../img/character_still.png';\nimport CharacterStillForSale from '../img/character_still_lg_for_sale.png';\nimport Loading from './Loading';\nimport web3 from '../utilities/web3Provider.js';\nimport { abi, address } from '../contracts/avatarBazaarAbi.js';\nimport './Profile.css';\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this, props));\n\n    _this.renderRows = function () {\n      if (_this.state.loading) {\n        return React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n      }\n\n      var rows = _this.state.characters.map(function (character, index) {\n        var name = character.name,\n            weapon = character.weapon,\n            armor = character.armor,\n            ratCount = character.ratCount,\n            skeletonCount = character.skeletonCount,\n            totalKills = character.totalKills,\n            totalDmg = character.totalDmg,\n            totalRevives = character.totalRevives,\n            image = character.image,\n            forSale = character.forSale;\n        var characterStill = forSale ? CharacterStillForSale : CharacterStill;\n        return React.createElement(Col, {\n          key: index,\n          xs: 6,\n          md: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(Thumbnail, {\n          src: image,\n          className: \"character-card\",\n          alt: \"character-image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"Weapon: \", weapon), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"Armor: \", armor), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"Rat Count: \", ratCount), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \"Skeleton Count: \", skeletonCount), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \"Total Kills: \", totalKills), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, \"Total Damage: \", totalDmg), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \"Total Revives: \", totalRevives), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(Button, {\n          bsStyle: \"primary\",\n          disabled: forSale,\n          onClick: _this.playAs.bind(_assertThisInitialized(_assertThisInitialized(_this)), index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"Play as \", name), \"\\xA0\", React.createElement(Button, {\n          bsStyle: \"default\",\n          disabled: forSale,\n          onClick: _this.auctionOff.bind(_assertThisInitialized(_assertThisInitialized(_this)), index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Sell \", name))));\n      });\n\n      return rows;\n    };\n\n    _this.state = {\n      loading: false,\n      showGame: CharacterStill,\n      characters: []\n    };\n    _this.getCharacterStats = _this.getCharacterStats.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"auctionOff\",\n    value: function auctionOff(tokenIndex) {\n      var CharacterContract = new web3.eth.Contract(abi, address, {\n        from: this.props.userAccount\n      });\n      var self = this;\n      CharacterContract.methods.auctionCharacter(this.state.characters[tokenIndex].tokenId, \"123\", \"222\", 10000000000).send({\n        from: this.state.userAccount\n      }).then(function (result) {\n        console.log(result);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var CharacterContract = new web3.eth.Contract(abi, address, {\n        from: this.props.userAccount\n      });\n      var self = this;\n      CharacterContract.methods.getCharactersPerUser().call().then(function (charactersResult) {\n        //the result holds your Token Balance that you can assign to a var\n        console.log('characterIdArray:');\n        console.log(charactersResult);\n        var characterIdArray = charactersResult; //Loop Through each Id that is owned\n\n        for (var i = 0; i < characterIdArray.length; i++) {\n          console.log(\"characterIdArray at \" + i + \": \" + characterIdArray[i]); //Call Id Details [i] is TicketId\n\n          this.getCharacterStats(CharacterContract, characterIdArray[i]);\n        }\n\n        return charactersResult;\n      });\n    }\n  }, {\n    key: \"getCharacterStats\",\n    value: function getCharacterStats(characterContract, id) {\n      var self = this;\n      characterContract.methods.viewCharacterDataStepOne(id).call().then(function (resultOne) {\n        console.log(resultOne);\n        characterContract.methods.viewCharacterDataStepTwo(id).call().then(function (resultTwo) {\n          console.log(id);\n          console.log(resultTwo); //the result holds your Token Balance that you can assign to a var\n\n          self.setState(function (prevState) {\n            return {\n              characters: _toConsumableArray(prevState.characters).concat([{\n                tokenId: id,\n                name: resultOne[0],\n                weapon: resultOne[1],\n                armor: resultOne[2],\n                image: resultOne[3],\n                ratCount: resultTwo[1],\n                skeletonCount: resultTwo[2],\n                totalKills: resultTwo[3],\n                totalDmg: resultTwo[4],\n                totalRevives: resultTwo[5]\n              }])\n            };\n          });\n          return resultTwo;\n        });\n      });\n    }\n  }, {\n    key: \"playAs\",\n    value: function playAs(tokenIndex) {\n      window.location = \"http://54.187.164.49:8080/index.html?tokenId=\".concat(this.state.characters[tokenIndex].tokenId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"browswer-quest-background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"show-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, this.renderRows())));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nexport default Profile;","map":{"version":3,"sources":["/Users/colbygilbert95/Documents/tapTapAdventure/AvatarBazaar/MarketPlace/src/components/Profile.js"],"names":["Grid","Row","Col","Thumbnail","Button","React","Component","CharacterStill","CharacterStillForSale","Loading","web3","abi","address","Profile","props","renderRows","state","loading","rows","characters","map","character","index","name","weapon","armor","ratCount","skeletonCount","totalKills","totalDmg","totalRevives","image","forSale","characterStill","playAs","bind","auctionOff","showGame","getCharacterStats","tokenIndex","CharacterContract","eth","Contract","from","userAccount","self","methods","auctionCharacter","tokenId","send","then","result","console","log","getCharactersPerUser","call","charactersResult","characterIdArray","i","length","characterContract","id","viewCharacterDataStepOne","resultOne","viewCharacterDataStepTwo","resultTwo","setState","prevState","window","location"],"mappings":"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","sourcesContent":["import {Grid,Row,Col,Thumbnail,Button} from 'react-bootstrap'\nimport React, {Component} from 'react'\nimport CharacterStill from '../img/character_still.png'\nimport CharacterStillForSale from '../img/character_still_lg_for_sale.png'\nimport Loading from './Loading'\nimport web3 from '../utilities/web3Provider.js'\nimport {abi,address} from '../contracts/avatarBazaarAbi.js'\nimport './Profile.css'\n\nclass Profile extends Component{\n    constructor(props) {\n      super(props)\n\n      this.state = {\n          loading: false,\n          showGame: CharacterStill,\n          characters: [\n          ]\n      }\n      this.getCharacterStats = this.getCharacterStats.bind(this)\n    }\n    auctionOff(tokenIndex){\n\n        var CharacterContract = new web3.eth.Contract(abi,\n            address, {from: this.props.userAccount});\n            var self = this;\n            CharacterContract.methods.auctionCharacter(this.state.characters[tokenIndex].tokenId,\"123\",\"222\",10000000000).send({from:this.state.userAccount})\n            .then(function(result){\n                console.log(result)\n            })\n    }\n    componentDidMount(){\n      var CharacterContract = new web3.eth.Contract(abi,\n        address, {from: this.props.userAccount});\n        var self = this;\n        CharacterContract.methods.getCharactersPerUser().call()\n        .then(function(charactersResult){\n        //the result holds your Token Balance that you can assign to a var\n        console.log('characterIdArray:')\n        console.log(charactersResult)\n        var characterIdArray = charactersResult;\n        \n         //Loop Through each Id that is owned\n        for(var i = 0; i < characterIdArray.length; i++){\n          console.log(\"characterIdArray at \" + i + \": \" + characterIdArray[i]);\n\n          //Call Id Details [i] is TicketId\n          this.getCharacterStats(CharacterContract, characterIdArray[i]); \n\n        }\n        return charactersResult;\n        });\n    }\n\n    getCharacterStats(characterContract, id) {\n      var self = this;\n      characterContract.methods.viewCharacterDataStepOne(id).call()\n      .then(function(resultOne){\n        console.log(resultOne);\n        characterContract.methods.viewCharacterDataStepTwo(id).call()\n        .then(function(resultTwo){\n          console.log(id);\n          console.log(resultTwo);\n          //the result holds your Token Balance that you can assign to a var\n          self.setState(prevState => ({\n            characters: [\n              ...prevState.characters, {\n                   tokenId: id,\n                name:resultOne[0],\n                weapon: resultOne[1],\n                armor:resultOne[2],\n                image: resultOne[3],\n                ratCount: resultTwo[1],\n                skeletonCount: resultTwo[2],\n                totalKills: resultTwo[3],\n                totalDmg: resultTwo[4],\n                totalRevives: resultTwo[5]\n              }\n            ]\n          }));\n          return resultTwo;\n        });\n      });\n    }\n\n    playAs(tokenIndex){\n        window.location = `http://54.187.164.49:8080/index.html?tokenId=${this.state.characters[tokenIndex].tokenId}`\n    }\n    renderRows = () => {\n      if (this.state.loading) {\n        return <Loading />\n      }\n      var rows = this.state.characters.map((character, index) => {\n        const { name,weapon,armor,ratCount,skeletonCount,totalKills,totalDmg,totalRevives,image,forSale} = character;\n        var characterStill = forSale ? CharacterStillForSale : CharacterStill\n        return (\n            <Col key={index} xs={6} md={4}>\n                {/*<Thumbnail src={characterStill} className=\"character-card\" alt=\"242x200\">*/}\n                <Thumbnail src={image} className=\"character-card\" alt=\"character-image\">\n                    <h3>{name}</h3>\n                    <p>Weapon: {weapon}</p>\n                    <p>Armor: {armor}</p>\n                    <p>Rat Count: {ratCount}</p>\n                    <p>Skeleton Count: {skeletonCount}</p>\n                    <p>Total Kills: {totalKills}</p>\n                    <p>Total Damage: {totalDmg}</p>\n                    <p>Total Revives: {totalRevives}</p>\n                    <p>\n                    <Button bsStyle=\"primary\" disabled={forSale} onClick={this.playAs.bind(this,index)}>Play as {name}</Button>\n                    &nbsp;\n                    <Button bsStyle=\"default\" disabled={forSale} onClick={this.auctionOff.bind(this,index)}>Sell {name}</Button>\n                    </p>\n                </Thumbnail>\n            </Col>\n        );\n      });\n      return rows;\n    };\n    render(){\n        return(\n            <div className=\"browswer-quest-background\">\n                <Grid>\n                    <Row className=\"show-grid\">\n                        {this.renderRows()}\n                    </Row>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}