{"ast":null,"code":"import _toConsumableArray from \"/Users/colbygilbert95/Documents/tapTapAdventure/AvatarBazaar/MarketPlace/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/colbygilbert95/Documents/tapTapAdventure/AvatarBazaar/MarketPlace/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/colbygilbert95/Documents/tapTapAdventure/AvatarBazaar/MarketPlace/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/colbygilbert95/Documents/tapTapAdventure/AvatarBazaar/MarketPlace/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/colbygilbert95/Documents/tapTapAdventure/AvatarBazaar/MarketPlace/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/colbygilbert95/Documents/tapTapAdventure/AvatarBazaar/MarketPlace/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/colbygilbert95/Documents/tapTapAdventure/AvatarBazaar/MarketPlace/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/colbygilbert95/Documents/tapTapAdventure/AvatarBazaar/MarketPlace/src/components/Profile.js\";\nimport { Grid, Row, Col, Thumbnail, Button } from \"react-bootstrap\";\nimport React, { Component } from \"react\";\nimport CharacterStill from \"../img/character_still.png\";\nimport CharacterStillForSale from \"../img/character_still_lg_for_sale.png\";\nimport Loading from \"./Loading\";\nimport web3 from \"../utilities/web3Provider.js\";\nimport { abi, address } from \"../contracts/avatarBazaarAbi.js\";\nimport \"./Profile.css\";\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this, props));\n\n    _this.renderRows = function () {\n      if (_this.state.loading) {\n        return React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        });\n      }\n\n      var rows = _this.state.characters.map(function (character, index) {\n        var name = character.name,\n            weapon = character.weapon,\n            armor = character.armor,\n            ratCount = character.ratCount,\n            skeletonCount = character.skeletonCount,\n            totalKills = character.totalKills,\n            totalDmg = character.totalDmg,\n            totalRevives = character.totalRevives,\n            image = character.image,\n            forSale = character.forSale;\n        var characterStill = forSale ? CharacterStillForSale : CharacterStill;\n        return React.createElement(Col, {\n          key: index,\n          xs: 6,\n          md: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(Thumbnail, {\n          src: image,\n          className: \"character-card\",\n          alt: \"character-image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"Weapon: \", weapon), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \"Armor: \", armor), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Rat Count: \", ratCount), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"Skeleton Count: \", skeletonCount), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"Total Kills: \", totalKills), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"Total Damage: \", totalDmg), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"Total Revives: \", totalRevives), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(Button, {\n          bsStyle: \"primary\",\n          disabled: forSale,\n          onClick: _this.playAs.bind(_assertThisInitialized(_assertThisInitialized(_this)), index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"Play as \", name), \"\\xA0\", React.createElement(Button, {\n          bsStyle: \"default\",\n          disabled: forSale,\n          onClick: _this.auctionOff.bind(_assertThisInitialized(_assertThisInitialized(_this)), index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"Sell \", name))));\n      });\n\n      return rows;\n    };\n\n    _this.state = {\n      loading: false,\n      showGame: CharacterStill,\n      characters: []\n    };\n    _this.characterStats = _this.characterStats.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"auctionOff\",\n    value: function auctionOff(tokenIndex) {\n      var CharacterContract = new web3.eth.Contract(abi, address, {\n        from: this.props.userAccount\n      });\n      var self = this;\n      CharacterContract.methods.auctionCharacter(this.state.characters[tokenIndex].tokenId, \"123\", \"222\", 10000000000).send({\n        from: this.state.userAccount\n      }).then(function (result) {\n        console.log(result);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var CharacterContract = new web3.eth.Contract(abi, address, {\n        from: this.props.userAccount\n      });\n      var self = this;\n      CharacterContract.methods.getCharactersPerUser().call().then(function (charactersResult) {\n        //the result holds your Token Balance that you can assign to a var\n        console.log(\"characterIdArray:\");\n        console.log(charactersResult);\n        var characterIdArray = charactersResult; //Loop Through each Id that is owned\n\n        for (var i = 0; i < characterIdArray.length; i++) {\n          console.log(\"characterIdArray at \" + i + \": \" + characterIdArray[i]); //Call Id Details [i] is TicketId\n\n          characterStats(CharacterContract, characterIdArray[i]);\n        }\n\n        return charactersResult;\n      });\n    }\n  }, {\n    key: \"playAs\",\n    value: function playAs(tokenIndex) {\n      window.location = \"http://54.187.164.49:8080/index.html?tokenId=\".concat(this.state.characters[tokenIndex].tokenId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"browswer-quest-background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"show-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, this.renderRows())));\n    }\n  }, {\n    key: \"characterStats\",\n    value: function characterStats(characterContract, id) {\n      var self = this;\n      characterContract.methods.viewCharacterDataStepOne(id).call().then(function (resultOne) {\n        console.log(resultOne);\n        characterContract.methods.viewCharacterDataStepTwo(id).call().then(function (resultTwo) {\n          console.log(id);\n          console.log(resultTwo); //the result holds your Token Balance that you can assign to a var\n\n          self.setState(function (prevState) {\n            return {\n              characters: _toConsumableArray(prevState.characters).concat([{\n                tokenId: id,\n                name: resultOne[0],\n                weapon: resultOne[1],\n                armor: resultOne[2],\n                image: resultOne[3],\n                ratCount: resultTwo[1],\n                skeletonCount: resultTwo[2],\n                totalKills: resultTwo[3],\n                totalDmg: resultTwo[4],\n                totalRevives: resultTwo[5]\n              }])\n            };\n          });\n          return resultTwo;\n        });\n      });\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nexport default Profile;","map":{"version":3,"sources":["/Users/colbygilbert95/Documents/tapTapAdventure/AvatarBazaar/MarketPlace/src/components/Profile.js"],"names":["Grid","Row","Col","Thumbnail","Button","React","Component","CharacterStill","CharacterStillForSale","Loading","web3","abi","address","Profile","props","renderRows","state","loading","rows","characters","map","character","index","name","weapon","armor","ratCount","skeletonCount","totalKills","totalDmg","totalRevives","image","forSale","characterStill","playAs","bind","auctionOff","showGame","characterStats","tokenIndex","CharacterContract","eth","Contract","from","userAccount","self","methods","auctionCharacter","tokenId","send","then","result","console","log","getCharactersPerUser","call","charactersResult","characterIdArray","i","length","window","location","characterContract","id","viewCharacterDataStepOne","resultOne","viewCharacterDataStepTwo","resultTwo","setState","prevState"],"mappings":"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","sourcesContent":["import { Grid, Row, Col, Thumbnail, Button } from \"react-bootstrap\";\nimport React, { Component } from \"react\";\nimport CharacterStill from \"../img/character_still.png\";\nimport CharacterStillForSale from \"../img/character_still_lg_for_sale.png\";\nimport Loading from \"./Loading\";\nimport web3 from \"../utilities/web3Provider.js\";\nimport { abi, address } from \"../contracts/avatarBazaarAbi.js\";\nimport \"./Profile.css\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      showGame: CharacterStill,\n      characters: []\n    };\n    this.characterStats = this.characterStats.bind(this);\n  }\n  auctionOff(tokenIndex) {\n    var CharacterContract = new web3.eth.Contract(abi, address, {\n      from: this.props.userAccount\n    });\n    var self = this;\n    CharacterContract.methods\n      .auctionCharacter(\n        this.state.characters[tokenIndex].tokenId,\n        \"123\",\n        \"222\",\n        10000000000\n      )\n      .send({ from: this.state.userAccount })\n      .then(function(result) {\n        console.log(result);\n      });\n  }\n  componentDidMount() {\n    var CharacterContract = new web3.eth.Contract(abi, address, {\n      from: this.props.userAccount\n    });\n    var self = this;\n    CharacterContract.methods\n      .getCharactersPerUser()\n      .call()\n      .then(function(charactersResult) {\n        //the result holds your Token Balance that you can assign to a var\n        console.log(\"characterIdArray:\");\n        console.log(charactersResult);\n        var characterIdArray = charactersResult;\n\n        //Loop Through each Id that is owned\n        for (var i = 0; i < characterIdArray.length; i++) {\n          console.log(\"characterIdArray at \" + i + \": \" + characterIdArray[i]);\n\n          //Call Id Details [i] is TicketId\n          characterStats(CharacterContract, characterIdArray[i]);\n        }\n        return charactersResult;\n      });\n  }\n\n  playAs(tokenIndex) {\n    window.location = `http://54.187.164.49:8080/index.html?tokenId=${\n      this.state.characters[tokenIndex].tokenId\n    }`;\n  }\n  renderRows = () => {\n    if (this.state.loading) {\n      return <Loading />;\n    }\n    var rows = this.state.characters.map((character, index) => {\n      const {\n        name,\n        weapon,\n        armor,\n        ratCount,\n        skeletonCount,\n        totalKills,\n        totalDmg,\n        totalRevives,\n        image,\n        forSale\n      } = character;\n      var characterStill = forSale ? CharacterStillForSale : CharacterStill;\n      return (\n        <Col key={index} xs={6} md={4}>\n          {/*<Thumbnail src={characterStill} className=\"character-card\" alt=\"242x200\">*/}\n          <Thumbnail\n            src={image}\n            className=\"character-card\"\n            alt=\"character-image\"\n          >\n            <h3>{name}</h3>\n            <p>Weapon: {weapon}</p>\n            <p>Armor: {armor}</p>\n            <p>Rat Count: {ratCount}</p>\n            <p>Skeleton Count: {skeletonCount}</p>\n            <p>Total Kills: {totalKills}</p>\n            <p>Total Damage: {totalDmg}</p>\n            <p>Total Revives: {totalRevives}</p>\n            <p>\n              <Button\n                bsStyle=\"primary\"\n                disabled={forSale}\n                onClick={this.playAs.bind(this, index)}\n              >\n                Play as {name}\n              </Button>\n              &nbsp;\n              <Button\n                bsStyle=\"default\"\n                disabled={forSale}\n                onClick={this.auctionOff.bind(this, index)}\n              >\n                Sell {name}\n              </Button>\n            </p>\n          </Thumbnail>\n        </Col>\n      );\n    });\n    return rows;\n  };\n  render() {\n    return (\n      <div className=\"browswer-quest-background\">\n        <Grid>\n          <Row className=\"show-grid\">{this.renderRows()}</Row>\n        </Grid>\n      </div>\n    );\n  }\n\n  characterStats(characterContract, id) {\n    var self = this;\n    characterContract.methods\n      .viewCharacterDataStepOne(id)\n      .call()\n      .then(function(resultOne) {\n        console.log(resultOne);\n        characterContract.methods\n          .viewCharacterDataStepTwo(id)\n          .call()\n          .then(function(resultTwo) {\n            console.log(id);\n            console.log(resultTwo);\n            //the result holds your Token Balance that you can assign to a var\n            self.setState(prevState => ({\n              characters: [\n                ...prevState.characters,\n                {\n                  tokenId: id,\n                  name: resultOne[0],\n                  weapon: resultOne[1],\n                  armor: resultOne[2],\n                  image: resultOne[3],\n                  ratCount: resultTwo[1],\n                  skeletonCount: resultTwo[2],\n                  totalKills: resultTwo[3],\n                  totalDmg: resultTwo[4],\n                  totalRevives: resultTwo[5]\n                }\n              ]\n            }));\n            return resultTwo;\n          });\n      });\n  }\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}